[["index.html", "Introducción a RNA-Seq LCG-2021 | Proyecto Final Chapter 1 Introducción", " Introducción a RNA-Seq LCG-2021 | Proyecto Final Elizabeth Márquez Gómez 2021-03-01 Chapter 1 Introducción El siguiente proyecto tiene por objetivo aplicar los conocimientos aprendidos en el curso RNA-seq 2021. Primer módulo del programa de bioinformática en la Licenciatura en Ciencias Genómicas, Universidad Nacional Autónoma de México. Por medio de una búsqueda exhaustiva en el paquete recount3 de Bioconductor, se identificó el proyecto SRP162774 - Variability in the Analgesic Response to Ibuprofen Following Third Molar Extraction is Associated with Differences in Activation of the Cyclooxygenase Pathway, el cuál me pareció adecuado para el análisis de sus datos. 1.0.1 Abstract del proyecto It has long been recognized that there is substantial inter-individual variability in the analgesic efficacy of non-steroidal anti-inflammatory drugs (NSAIDs), but the mechanisms underlying this variability are not well understood. In order to characterize the factors associated with heterogeneity in response to ibuprofen, we performed functional neuroimaging, pharmacokinetic/pharmacodynamic assessments, biochemical assays, and gene expression analysis in twenty-nine healthy subjects who underwent third molar extraction. Subjects were treated with rapid-acting ibuprofen (400 mg; N=19) or placebo (N=10) in a randomized, double-blind design. Compared to placebo, ibuprofen-treated subjects exhibited greater reduction in pain scores, alterations in CBF in brain regions associated with pain processing, and inhibition of ex vivo COX-1 and COX-2 activity and urinary prostaglandin metabolites (p&lt;0.05). Ibuprofen-treated subjects could be stratified into partial responders (N=9, required rescue medication) and complete responders (N=10, no rescue medication). This variability in analgesic efficacy was not associated with demographic/clinical characteristics, markers of systemic inflammation, or ibuprofen pharmacokinetics. Complete responders exhibited less suppression of urinary prostaglandin metabolites and greater induction of serum tumor necrosis factor-a and interleukin 8, compared to partial responders (p&lt;0.05). Partial responders exhibited more alterations in gene expression in peripheral blood mononuclear cells after surgery, with an enrichment in inflammatory pathways. These findings suggest that activation of the prostanoid biosynthetic pathway and regulation of the inflammatory response to surgery differs between partial and complete responders. Future studies are necessary to elucidate the molecular mechanisms underlying this variability and identify biomarkers that are predictive of ibuprofen response. Overall design: Human subjects were given Ibuprofen (400 mg; n=19) or placebo (n=10) following surgical extraction of their third molars. Subjects given Ibuprofen were retrospectively classified as partial responders (n=9) if they required rescue medication (hydrocodone 5 mg/acetaminophen 325 mg), or full responders (n=10) if they did not. All subjects in the placebo group received rescue medication. Blood was collected from subjects before surgery (baseline) and at two time points following surgery (post-surgery 1, post-surgery 2). Both post-surgery samples were collected after subjects were given drug/placebo. Peripheral blood mononuclear cell (PBMCs) were isolated from blood samples and their RNA content was assayed via RNA-seq. The following samples were dropped from normalization and final analyses due to low read depths: GSM3405457 (1004_post-surgery_1), GSM3405459 (1005_post-surgery_1), GSM3405462 (1007_baseline), GSM3405463 (1007_post-surgery_1), GSM3405464 (1008_baseline), GSM3405465 (1008_post-surgery_1), GSM3405466 (1008_post-surgery_2), GSM3405468 (1011_post-surgery_1), GSM3405469 (1011_post-surgery_2), GSM3405472 (1012_post-surgery_2), GSM3405491 (1020_baseline). "],["importación-de-datos-y-carga-de-bibliotecas.html", "Chapter 2 Importación de datos y carga de bibliotecas 2.1 Descarga de bibliotecas 2.2 Importación de datos y evaluación del objeto", " Chapter 2 Importación de datos y carga de bibliotecas 2.1 Descarga de bibliotecas ## Cargar el paquete de recount3 library(&quot;recount3&quot;) library(&quot;edgeR&quot;) # BiocManager::install(&quot;edgeR&quot;, update = FALSE) library(&quot;ggplot2&quot;) library(&quot;limma&quot;) library(&quot;pheatmap&quot;) library(&quot;RColorBrewer&quot;) ## Obtener todos los proyectos disponibles de recount3 human_projects &lt;- available_projects() 2.2 Importación de datos y evaluación del objeto ## Descargar el proyecto SRP162774 - Variability in the Analgesic Response to Ibuprofen Following Third Molar Extraction is Associated with Differences in Activation of the Cyclooxygenase Pathway proj_info &lt;- subset( human_projects, project == &quot;SRP162774&quot; &amp; project_type == &quot;data_sources&quot; ) ## Crea un objeto de clase RangedSummarizedExperiment (RSE) con la información a nivel de genes rse_gene_SRP162774 &lt;- create_rse(proj_info) rse_gene_SRP162774 ## class: RangedSummarizedExperiment ## dim: 63856 911 ## metadata(8): time_created recount3_version ... annotation recount3_url ## assays(1): raw_counts ## rownames(63856): ENSG00000278704.1 ENSG00000277400.1 ... ## ENSG00000182484.15_PAR_Y ENSG00000227159.8_PAR_Y ## rowData names(10): source type ... havana_gene tag ## colnames(911): SRR7911000 SRR7911001 ... SRR7910995 SRR7910996 ## colData names(175): rail_id external_id ... ## recount_pred.curated.cell_line BigWigURL El objeto es analizado con el fin de conocer las categoría que contiene, y evaluar la homogeneidad de las mismas. Si existe algún problema tendrá que ser arreglado por medio de la curación o limpieza de los datos. ## Conversión de las cuentas por nucleotido a cuentas por lectura assay(rse_gene_SRP162774, &quot;counts&quot;) &lt;- compute_read_counts(rse_gene_SRP162774) ##Obtener un resumen más completo sobre el objeto rse_gene_SRP162774 &lt;- expand_sra_attributes(rse_gene_SRP162774) colData(rse_gene_SRP162774)[ , grepl(&quot;^sra_attribute&quot;, colnames(colData(rse_gene_SRP162774))) ] ## DataFrame with 911 rows and 8 columns ## sra_attribute.cell_type sra_attribute.drug_treatment ## &lt;character&gt; &lt;character&gt; ## SRR7911000 peripheral blood mon.. ibuprofen sodium ## SRR7911001 peripheral blood mon.. ibuprofen sodium ## SRR7911004 peripheral blood mon.. ibuprofen sodium ## SRR7911005 peripheral blood mon.. ibuprofen sodium ## SRR7911006 peripheral blood mon.. ibuprofen sodium ## ... ... ... ## SRR7910943 peripheral blood mon.. Placebo ## SRR7910948 peripheral blood mon.. Placebo ## SRR7910954 peripheral blood mon.. Placebo ## SRR7910995 peripheral blood mon.. ibuprofen sodium ## SRR7910996 peripheral blood mon.. ibuprofen sodium ## sra_attribute.gender sra_attribute.library_barcode ## &lt;character&gt; &lt;character&gt; ## SRR7911000 female TCTCGCGC-GGCTCTGA ## SRR7911001 female TCTCGCGC-GGCTCTGA ## SRR7911004 male AGCGATAG-GGCTCTGA ## SRR7911005 male AGCGATAG-GGCTCTGA ## SRR7911006 male AGCGATAG-GGCTCTGA ## ... ... ... ## SRR7910943 female CTGAAGCT-GGCTCTGA ## SRR7910948 female TAATGCGC-GGCTCTGA ## SRR7910954 female TAATGCGC-GGCTCTGA ## SRR7910995 female TCTCGCGC-GGCTCTGA ## SRR7910996 female TCTCGCGC-GGCTCTGA ## sra_attribute.response_group sra_attribute.source_name ## &lt;character&gt; &lt;character&gt; ## SRR7911000 Partial responder peripheral blood mon.. ## SRR7911001 Partial responder peripheral blood mon.. ## SRR7911004 Full responder peripheral blood mon.. ## SRR7911005 Full responder peripheral blood mon.. ## SRR7911006 Full responder peripheral blood mon.. ## ... ... ... ## SRR7910943 Placebo peripheral blood mon.. ## SRR7910948 Placebo peripheral blood mon.. ## SRR7910954 Placebo peripheral blood mon.. ## SRR7910995 Partial responder peripheral blood mon.. ## SRR7910996 Partial responder peripheral blood mon.. ## sra_attribute.subject sra_attribute.timepoint ## &lt;character&gt; &lt;character&gt; ## SRR7911000 1021 post-surgery 2 ## SRR7911001 1021 post-surgery 2 ## SRR7911004 1022 baseline ## SRR7911005 1022 baseline ## SRR7911006 1022 baseline ## ... ... ... ## SRR7910943 1020 post-surgery 1 ## SRR7910948 1020 post-surgery 2 ## SRR7910954 1020 post-surgery 2 ## SRR7910995 1021 post-surgery 2 ## SRR7910996 1021 post-surgery 2 Al observar una buena integridad de los datos en el paso anterior, no será necesario hacer una limpieza de ellos. Para el análisis de expresión diferencial, se utilizarán dos atributos del objeto drug_treatment y gender, ambos pueden ser manejados como dummy variables. ##Verificar los valores de las características a evaluar. table(rse_gene_SRP162774$sra_attribute.drug_treatment) ## ## ibuprofen sodium Placebo ## 577 334 table(rse_gene_SRP162774$sra_attribute.gender) ## ## female male ## 416 495 "],["formateo-de-datos.html", "Chapter 3 Formateo de datos", " Chapter 3 Formateo de datos Converitir a factor los valores a utilizar para el análisis estadístico. ## Convertir a factor las categorías que puedan ser dummy variables rse_gene_SRP162774$sra_attribute.drug_treatment &lt;- factor(ifelse(rse_gene_SRP162774$sra_attribute.drug_treatment == &#39;Placebo&#39;, &#39;Placebo&#39;, &#39;Ibuprofen&#39;)) rse_gene_SRP162774$sra_attribute.gender &lt;- factor(rse_gene_SRP162774$sra_attribute.gender) ## Resumen de las variables de interés summary(as.data.frame(colData(rse_gene_SRP162774)[ , grepl(&quot;^sra_attribute.[cell_line|source_name|treatment]&quot;, colnames(colData(rse_gene_SRP162774))) ])) ## sra_attribute.cell_type sra_attribute.library_barcode ## Length:911 Length:911 ## Class :character Class :character ## Mode :character Mode :character ## sra_attribute.response_group sra_attribute.source_name sra_attribute.subject ## Length:911 Length:911 Length:911 ## Class :character Class :character Class :character ## Mode :character Mode :character Mode :character ## sra_attribute.timepoint ## Length:911 ## Class :character ## Mode :character "],["transformación-de-los-datos.html", "Chapter 4 Transformación de los datos 4.1 Filtrado", " Chapter 4 Transformación de los datos Ahora se procederá a filtrar y manipular los datos con el fin de obtener los resultados más confiables posibles. A partir del análisis estadístico de la proporción génica, se puede observar que los valores divergen por una unidad y media aproximadamente, como máximo. ## Generar la variable que almacena la proporción génica rse_gene_SRP162774$assigned_gene_prop &lt;- rse_gene_SRP162774$recount_qc.gene_fc_count_all.assigned / rse_gene_SRP162774$recount_qc.gene_fc_count_all.total summary(rse_gene_SRP162774$assigned_gene_prop) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.07559 0.11192 0.13144 0.13306 0.15312 0.22365 4.1 Filtrado Para el filtrado de los datos se aplicarán dos parámetros: - Calidad de biblioteca: referente a la proporción de lecturas asignadas a genes sobre las lecturas totales. - Nivel de expresión: basándose en niveles promedio de expresión de los datos y valores como el cpm (counts per million). ## Observar la tendencia de expresión e información estadística de los estados de la categoría a evaluar with(colData(rse_gene_SRP162774), tapply(assigned_gene_prop, sra_attribute.drug_treatment, summary)) ## $Ibuprofen ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.07559 0.11281 0.13359 0.13368 0.15227 0.22365 ## ## $Placebo ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.07901 0.11017 0.12781 0.13197 0.15461 0.21185 A partir del siguiente histograma, es posible observar que la calidad de los datos varía mucho, lo que indica baja calidad de la biblioteca. Sin embargo, se ha decidido proceder con el filtrado y limpieza de datos. Se decidió que la proporción de muestras sea mayor 0.1, debido la baja frecuencia de aquellas previas al corte 0.1. Debe resaltarse, que aún así siguen existiendo algunas muestras con baja, pero se intentó perder la menor información posible. Esto también se basa en las proporciones observadas anteriormente, donde el primer cuartil de ambos estados es ~0.1 por lo que podemos tomarlo como punto de corte. Para la parte de la cola (derecha), a pesar de tener baja frecuencia, son datos más confiables, por lo cual no se eliminaron. ## Salvar información cruda del proyecto rse_gene_SRP162774_unfiltered &lt;- rse_gene_SRP162774 ## Eliminar muestras malas colorGradient &lt;- colorRampPalette(c(&#39;gold&#39;,&#39;firebrick1&#39;)) hist(rse_gene_SRP162774$assigned_gene_prop, col = colorGradient(20), main=&#39;Distribución de expresión génica en rse_gene_SRP162774&#39;, xlab=&#39;Expresión&#39;, ylab=&#39;Frecuencia&#39;) abline(v = 0.1, col=&quot;dodgerblue3&quot;, lwd=3, lty=2) ## Verificar el número de muestras que cumplen con el criterio table(rse_gene_SRP162774$assigned_gene_prop &lt; 0.1) ## ## FALSE TRUE ## 775 136 Aplicar el corte al pico de la distribución. Se observa una forma más aceptable. A partir del análisis estadístico, se decidirá el valor mínimo para la calidad de expresión génica. Ya que el mínimo y el primer cuartil presentan 0.000, y la media tiene un valor muy bajo aún. Se tomará como punto de corte a 0.1 (muestras poco informativas) ## Realizar el corte y observar la distribución rse_gene_SRP162774 &lt;- rse_gene_SRP162774[, rse_gene_SRP162774$assigned_gene_prop &gt; 0.1] colorGradient &lt;- colorRampPalette(c(&#39;darkslategray1&#39;,&#39;dodgerblue4&#39;)) hist(rse_gene_SRP162774$assigned_gene_prop, col = colorGradient(13), main=&#39;Distribución de expresión génica en rse_gene_SRP162774 con cutoff&#39;, xlab=&#39;Expresión&#39;, ylab=&#39;Frecuencia&#39;) abline(v = 0.1, col=&quot;red&quot;, lwd=3, lty=2) ## Se calculan los niveles medios de expresión de los genes en las muestras gene_means &lt;- rowMeans(assay(rse_gene_SRP162774, &quot;counts&quot;)) summary(gene_means) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.000 0.000 0.028 12.653 1.563 19203.401 Debido a los resultados del análisis estadístico anterior, donde el 1er cuartil y la media toman valores de 0, se procederá a tomar 0.1 como valor mínimo para niveles de expresión génica. ## Eliminar genes con menor a 0.1 rse_gene_SRP162774 &lt;- rse_gene_SRP162774[gene_means &gt; 0.1, ] ## Comparar dimensión final dim(rse_gene_SRP162774_unfiltered) ## [1] 63856 911 dim(rse_gene_SRP162774) ## [1] 26644 775 Después de la limpieza, se ha conservado el 41.73% del total de los datos. La gran pérdida de los mismos se atribuye a una baja caliad de la biblioteca original. #Obtener el porcentaje de información conservada después de la limpieza round(nrow(rse_gene_SRP162774) / nrow(rse_gene_SRP162774_unfiltered) * 100, 2) ## [1] 41.73 Se decidió probar con limpieza automatizada por medio de la función keep.exprs de limma con la esperanza de obtener una integridad mayor de los datos. #Calculo de factores de normalización dge_auto &lt;- DGEList( counts = assay(rse_gene_SRP162774, &quot;counts&quot;), genes = rowData(rse_gene_SRP162774) ) dge_auto &lt;- calcNormFactors(dge_auto) cpm &lt;- cpm(dge_auto) lcpm &lt;- cpm(dge_auto, log=TRUE) L &lt;- mean(dge_auto$samples$lib.size) * 1e-6 M &lt;- median(dge_auto$samples$lib.size) * 1e-6 c(L, M) ## [1] 0.8075566 0.7277270 ## Determinarémos cuáles genes cuentan con un nivel de expresión significativo con la función filterByExpr. keep.exprs &lt;- filterByExpr(dge_auto, group=dge_auto$samples$group) dge_auto &lt;- dge_auto[keep.exprs,, keep.lib.sizes=FALSE] dim(dge_auto) ## [1] 7960 775 dim(rse_gene_SRP162774) ## [1] 26644 775 El filtrado automatizado logró conservar el 12.49% de los datos. Por esto mismo se decidió no proceder con esta información, ya que es muy poca. round(nrow(dge_auto) / nrow(rse_gene_SRP162774) * 100, 2) ## [1] 29.88 El siguiente gráfico muestra el corte de datos realizado por keep.exprs debido a su baja calidad. lcpm.cutoff &lt;- log2(10/M + 2/L) nsamples &lt;- ncol(dge_auto) col &lt;- brewer.pal(nsamples, &quot;Paired&quot;) ## Warning in brewer.pal(nsamples, &quot;Paired&quot;): n too large, allowed maximum for palette Paired is 12 ## Returning the palette you asked for with that many colors par(mfrow=c(1,2)) plot(density(lcpm[,1]), col=col[1], lwd=2, las=2, main=&quot;&quot;, xlab=&quot;&quot;) title(main=&quot;A. Raw data&quot;, xlab=&quot;Log-cpm&quot;) abline(v=lcpm.cutoff, lty=3) for (i in 2:nsamples){ den &lt;- density(lcpm[,i]) lines(den$x, den$y, col=col[i], lwd=2) } lcpm &lt;- cpm(dge_auto, log=TRUE) plot(density(lcpm[,1]), col=col[1], lwd=2, las=2, main=&quot;&quot;, xlab=&quot;&quot;) title(main=&quot;B. Filtered data&quot;, xlab=&quot;Log-cpm&quot;) abline(v=lcpm.cutoff, lty=3) for (i in 2:nsamples){ den &lt;- density(lcpm[,i]) lines(den$x, den$y, col=col[i], lwd=2) } "],["visualización.html", "Chapter 5 Visualización", " Chapter 5 Visualización Se procederá al análisis visual de los datos ya curados y normalizados. Se evaluarán las dos categorías indicativas del objeto “sexo” y “tratamiento” #Calculo de factores de normalización dge &lt;- DGEList( counts = assay(rse_gene_SRP162774, &quot;counts&quot;), genes = rowData(rse_gene_SRP162774) ) dge &lt;- calcNormFactors(dge) La siguiente gráfica ilustra la distribución de expresión de ambas condiciones. Por lo que se puede ver que están encasilladas entre 0.1 a poco más de 0.21, ambas condiciones tienen expresión similar, sin embargo se puede percibir un grupo de outliers para la expresión de ibuprofeno ## Visualización de expresión por medio de boxplot ggplot(as.data.frame(colData(rse_gene_SRP162774)), aes(y = assigned_gene_prop, x = sra_attribute.drug_treatment, fill=sra_attribute.drug_treatment)) + geom_boxplot(alpha=0.3) + theme_bw(base_size = 20) + ylab(&quot;Proporción génica&quot;) + xlab(&quot;Tratamiento&quot;) + theme(legend.position=&quot;top&quot;, legend.title = element_text(size = 13), legend.text = element_text(size = 8)) + labs(fill = &quot;Relación de expresión génica con tipo de tratamiento |&quot;) ggplot(as.data.frame(colData(rse_gene_SRP162774)), aes(y = assigned_gene_prop, x = sra_attribute.gender, fill=sra_attribute.gender)) + geom_boxplot(alpha=0.3) + theme_bw(base_size = 20) + ylab(&quot;Proporción génica&quot;) + xlab(&quot;Sexo&quot;) + theme(legend.position=&quot;top&quot;, legend.title = element_text(size = 13), legend.text = element_text(size = 8)) + labs(fill = &quot;Relación de expresión génica con sexo |&quot;) "],["modelado-estadístico.html", "Chapter 6 Modelado estadístico", " Chapter 6 Modelado estadístico Se usará model.matrix() para modelar las dos categorías para el análisis de expresión diferencial. mod &lt;- model.matrix(~ sra_attribute.drug_treatment + sra_attribute.gender + assigned_gene_prop, data = colData(rse_gene_SRP162774) ) colnames(mod) ## [1] &quot;(Intercept)&quot; &quot;sra_attribute.drug_treatmentPlacebo&quot; ## [3] &quot;sra_attribute.gendermale&quot; &quot;assigned_gene_prop&quot; ## Verificar las posiciones de 1 y 0 respecto al estado de la categoría head(rse_gene_SRP162774$sra_attribute.drug_treatment) ## [1] Ibuprofen Ibuprofen Ibuprofen Ibuprofen Ibuprofen Ibuprofen ## Levels: Ibuprofen Placebo head(mod) ## (Intercept) sra_attribute.drug_treatmentPlacebo ## SRR7911000 1 0 ## SRR7911001 1 0 ## SRR7911004 1 0 ## SRR7911005 1 0 ## SRR7911006 1 0 ## SRR7911007 1 0 ## sra_attribute.gendermale assigned_gene_prop ## SRR7911000 0 0.1599425 ## SRR7911001 0 0.1586717 ## SRR7911004 1 0.1445792 ## SRR7911005 1 0.1348229 ## SRR7911006 1 0.1340993 ## SRR7911007 1 0.1421941 print(rse_gene_SRP162774$sra_attribute.drug_treatment[17]) ## [1] Placebo ## Levels: Ibuprofen Placebo print(mod[17]) ## [1] 1 La siguiente gráfica ilustra el promedio de varianza en la expresión diferencial de los datos. A partir de esto podemos observar el aunque se ajustan al promedio, la desviación se elonga aproximadamente 0.8 unidades. Es necesario acercar a los genes lejanos a la línea roja. vGene &lt;- voom(dge, mod, plot = TRUE) A partir de lo anterior, es necesario generar un modelo de regresión lineal para ajustar la expresión de los datos.Obtención del p-value por medio de la función eBayes. eb_results &lt;- eBayes(lmFit(vGene)) ## Se configura el coef en 2, ya que ahí se encuentra la variable a evaluar (de referencia) de_results &lt;- topTable( eb_results, coef = 2, number = nrow(rse_gene_SRP162774), sort.by = &quot;none&quot; ) dim(de_results) ## [1] 26644 16 head(de_results) ## source type score phase gene_id ## ENSG00000223972.5 HAVANA gene 1735 NA ENSG00000223972.5 ## ENSG00000278267.1 ENSEMBL gene 68 NA ENSG00000278267.1 ## ENSG00000227232.5 HAVANA gene 1351 NA ENSG00000227232.5 ## ENSG00000239945.1 HAVANA gene 1319 NA ENSG00000239945.1 ## ENSG00000238009.6 HAVANA gene 3726 NA ENSG00000238009.6 ## ENSG00000233750.3 HAVANA gene 3812 NA ENSG00000233750.3 ## gene_type gene_name level ## ENSG00000223972.5 transcribed_unprocessed_pseudogene DDX11L1 2 ## ENSG00000278267.1 miRNA MIR6859-1 3 ## ENSG00000227232.5 unprocessed_pseudogene WASH7P 2 ## ENSG00000239945.1 lincRNA RP11-34P13.8 2 ## ENSG00000238009.6 lincRNA RP11-34P13.7 2 ## ENSG00000233750.3 processed_pseudogene CICP27 1 ## havana_gene tag logFC AveExpr ## ENSG00000223972.5 OTTHUMG00000000961.2 &lt;NA&gt; 0.13701793 2.2731940 ## ENSG00000278267.1 &lt;NA&gt; &lt;NA&gt; 0.23074810 0.4182034 ## ENSG00000227232.5 OTTHUMG00000000958.1 &lt;NA&gt; 0.17576637 4.5382390 ## ENSG00000239945.1 OTTHUMG00000001097.2 overlapping_locus 0.08384809 0.3412740 ## ENSG00000238009.6 OTTHUMG00000001096.2 overlapping_locus -0.27515583 1.2725651 ## ENSG00000233750.3 OTTHUMG00000001257.3 pseudo_consens -0.22747778 1.4925440 ## t P.Value adj.P.Val B ## ENSG00000223972.5 1.9554141 5.088928e-02 1.158491e-01 -4.468697 ## ENSG00000278267.1 2.2368308 2.557794e-02 7.059237e-02 -3.616160 ## ENSG00000227232.5 4.9873251 7.542802e-07 1.559629e-05 5.314978 ## ENSG00000239945.1 0.7758086 4.380961e-01 5.542248e-01 -5.650885 ## ENSG00000238009.6 -2.9770138 3.000356e-03 1.437280e-02 -1.890726 ## ENSG00000233750.3 -2.5172333 1.202650e-02 4.066937e-02 -3.110197 Evaluar p-value menor a 0.05 ## Genes diferencialmente expresados entre ibuprofeno y placebo con FDR &lt; 5% table(de_results$adj.P.Val &lt; 0.05) ## ## FALSE TRUE ## 18165 8479 La siguiente gráfica explica el cambio de expresión entre placebo e ibupofeno. Los valores positivos indican una expresión más alta en placebo y valores negativos indican mayor expresión en ibuprofeno. ## Visualizar resultados estadísticos plotMA(eb_results, coef = 2) abline(h = 0.25, col=&quot;red&quot;, lwd=3, lty=2) abline(h = -0.25, col=&quot;red&quot;, lwd=3, lty=2) El gráfico siguiente ilustra el logfold change en el eje x y el p-value en el eje y. Esto permite dilucidar los genes con mayor expresión y con mejor valor de p-value. Los 3 genes con mayor expresión se resaltan en azul. #Checar los genes en genecards volcanoplot(eb_results, coef = 2, highlight = 3, names = de_results$gene_name) El el siguiente heatmap podemos observar algunas clusterizaciones intermitentes para la clasificación de sexo. En la clasificación de tratamiento se observan un más grandes, lo que indica una buena relación en los datos. Respecto a los genes, sí es posible ver clusterización en relación a su nivel de expresión. ## Extracción de valores de genes de interés exprs_heatmap &lt;- vGene$E[rank(de_results$adj.P.Val) &lt;= 50, ] ## Crear una tabla con información de las muestras df &lt;- as.data.frame(colData(rse_gene_SRP162774)[, c(&quot;sra_attribute.drug_treatment&quot;, &quot;sra_attribute.gender&quot;)]) colnames(df) &lt;- c(&quot;treatment&quot;, &quot;gender&quot;) ## Cambiar ID a nombre de los genes rownames(exprs_heatmap) ## [1] &quot;ENSG00000225972.1&quot; &quot;ENSG00000278791.1&quot; &quot;ENSG00000134184.12&quot; ## [4] &quot;ENSG00000148737.16&quot; &quot;ENSG00000171798.17&quot; &quot;ENSG00000142089.15&quot; ## [7] &quot;ENSG00000013573.16&quot; &quot;ENSG00000123358.19&quot; &quot;ENSG00000258732.1&quot; ## [10] &quot;ENSG00000103202.12&quot; &quot;ENSG00000005379.15&quot; &quot;ENSG00000123146.19&quot; ## [13] &quot;ENSG00000275395.4&quot; &quot;ENSG00000254415.3&quot; &quot;ENSG00000131042.14&quot; ## [16] &quot;ENSG00000180398.11&quot; &quot;ENSG00000204792.2&quot; &quot;ENSG00000233392.5&quot; ## [19] &quot;ENSG00000226321.5&quot; &quot;ENSG00000157557.11&quot; &quot;ENSG00000128284.19&quot; ## [22] &quot;ENSG00000189306.10&quot; &quot;ENSG00000100376.11&quot; &quot;ENSG00000075234.16&quot; ## [25] &quot;ENSG00000175066.15&quot; &quot;ENSG00000109321.10&quot; &quot;ENSG00000197822.10&quot; ## [28] &quot;ENSG00000145990.10&quot; &quot;ENSG00000137393.9&quot; &quot;ENSG00000204525.16&quot; ## [31] &quot;ENSG00000223534.1&quot; &quot;ENSG00000179344.16&quot; &quot;ENSG00000051620.10&quot; ## [34] &quot;ENSG00000260097.2&quot; &quot;ENSG00000170667.14&quot; &quot;ENSG00000272949.1&quot; ## [37] &quot;ENSG00000205238.9&quot; &quot;ENSG00000168255.19&quot; &quot;ENSG00000270249.1&quot; ## [40] &quot;ENSG00000267368.1&quot; &quot;ENSG00000205236.6&quot; &quot;ENSG00000173678.14&quot; ## [43] &quot;ENSG00000228049.7&quot; &quot;ENSG00000267645.5&quot; &quot;ENSG00000211747.3&quot; ## [46] &quot;ENSG00000211753.4&quot; &quot;ENSG00000175445.14&quot; &quot;ENSG00000170873.18&quot; ## [49] &quot;ENSG00000119138.4&quot; &quot;ENSG00000157514.16&quot; findPositions &lt;- which(rowRanges(rse_gene_SRP162774)$gene_id %in% rownames(exprs_heatmap)) rownames(exprs_heatmap) &lt;- rowRanges(rse_gene_SRP162774)$gene_name[findPositions] pheatmap( exprs_heatmap, cluster_rows = TRUE, cluster_cols = TRUE, show_rownames = TRUE, show_colnames = FALSE, annotation_col = df, fontsize_row = 4 ) ## Para colores head(df) ## treatment gender ## SRR7911000 Ibuprofen female ## SRR7911001 Ibuprofen female ## SRR7911004 Ibuprofen male ## SRR7911005 Ibuprofen male ## SRR7911006 Ibuprofen male ## SRR7911007 Ibuprofen male ## Conviertiendo los grupos de tratamiento a colores col.drug &lt;- df$treatment levels(col.drug) &lt;- brewer.pal(nlevels(col.drug), &quot;Set1&quot;) ## Warning in brewer.pal(nlevels(col.drug), &quot;Set1&quot;): minimal value for n is 3, returning requested palette with 3 different levels A pesar de la limpieza realizada a los datos, no es posible observar una clusterización referente al tipo de tratamiento en los niveles de expresión. Lo anterior, puede atribuirse a una baja calidad de la biblioteca de datos o a un nivel de expresión realmente bajo en ambas condiciones. col.drug &lt;- as.character(col.drug) ## MDS por grupos tratamiento plotMDS(vGene$E, labels = df$treatment, col = col.drug) Los siguientes gráficos sugieren una alta relación entre la respuesta a ibuprofeno ligada a los hombres, y la respuesta a placebo ligada a las mujeres. Sin embargo la clusterización no es tan clara para afirmar esta hipótesis. ## Conviertiendo los grupos de tratamiento a colores col.sex &lt;- df$gender levels(col.sex) &lt;- brewer.pal(nlevels(col.sex), &quot;Dark2&quot;) ## Warning in brewer.pal(nlevels(col.sex), &quot;Dark2&quot;): minimal value for n is 3, returning requested palette with 3 different levels col.sex &lt;- as.character(col.sex) ## MDS por grupos tratamiento plotMDS(vGene$E, labels = df$gender, col = col.sex) plot(df, main = &#39;Relación entre sexo y tipo de tratamiento&#39;, col = c(&#39;darkseagreen1&#39;, &#39;lightblue&#39;)) "],["interpretación.html", "Chapter 7 Interpretación", " Chapter 7 Interpretación Finalmente, es importante recalcar la importancia de la buena calidad de las bibliotecas de datos para un análisis de expresión diferencial adecuado. Tristemente no fue posible hacer una gran evaluación debido a la alta pérdida de datos y baja expresión diferencial del proyecto. Los datos fueron sometidos a un proceso de análisis, limpieza, manipulación, modelaje, visualización e interpretración establecido por: Esto con el fin de purificar la biblioteca de datos y obtener la mejor calidad posible para su análisis. Algunos de los retos que se presentaron fue el bajo número de características a usar para el análisis. Así como la definición adecuada de los puntos de corte que permitieran mejorar la calidad de los datos, pero al mismo tiempo evitar una pérdida masiva de los mismos. A pesar de los resultados obtenidos en este proyecto, creo que realizarlo fue una excelente oportunidad como el primer acercamiento a la bioinformática. Y los conocimientos adquiridos han sido de mucha utilidad como los primeros pasos de futuros proyectos más elaborados. Deseo que en un futuro tenga la oportunidad de desarrollarme más en esta área de la bioinformática y descubrir más herramientas que permitan análisis más completos y certeros de los datos. "],["autoría-y-referencias.html", "Chapter 8 Autoría y referencias 8.1 Autora 8.2 Referencias", " Chapter 8 Autoría y referencias 8.1 Autora Elizabeth Márquez Gómez Elizabeth GitHub 8.2 Referencias Curso RNA-seq 2021 Leonardo Collado-Torres Collado-Torres L (2021). Explore and download data from the recount3 project. doi: 10.18129/B9.bioc.recount3 (URL: https://doi.org/10.18129/B9.bioc.recount3), https://github.com/LieberInstitute/recount3 - R package version 1.0.7, &lt;URL: http://www.bioconductor.org/packages/recount3&gt;. Robinson MD, McCarthy DJ and Smyth GK (2010). edgeR: a Bioconductor package for differential expression analysis of digital gene expression data. Bioinformatics 26, 139-140 H. Wickham. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York, 2016. Ritchie ME, Phipson B, Wu D, Hu Y, Law CW, Shi W, Smyth GK (2015). “limma powers differential expression analyses for RNA-sequencing and microarray studies.” Nucleic Acids Research, 43(7), e47. doi: 10.1093/nar/gkv007, https://doi.org/10.1093/nar/gkv007 Kolde, R. (2019). “pheatmap: Pretty Heatmaps.” CRAN-r-project, https://CRAN.R-project.org/package=pheatmap Neuwirth, E. (2014). “RColorBrewer: ColorBrewer Palettes.” CRAN-r-project, https://CRAN.R-project.org/package=RColorBrewer "]]
